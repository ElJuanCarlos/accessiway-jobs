import { GetStaticProps } from "next";
import React, { useEffect, useState } from "react";
import { getSortedJobsData } from "../../../lib/jobs";
import Link from "next/link";
import Head from "next/head";
import { Footer, Header } from "@/modules/Organism";
import styled from "styled-components";
import { IntroText, FilterBar } from "@/components/JobList";
import Card from "@/modules/Molecules/CardBlog";

const Grid = styled.div`
  padding-top: 30px;
  width: 90%;
  max-width: 1200px;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 20px;
  margin: 0 auto;
  @media (max-width: 668px) {
    grid-template-columns: 1fr;
  }
`;

const JobList = ({ jobs }: JobListProps) => {
  const [department, setDepartment] = useState<string>();
  const [location, setLocation] = useState<string>();
  const [searchTerm, setSearchTerm] = useState<string>("");
  const [filteredList, setFilteredList] = useState<Job[]>(jobs);

  const handleDepartment = (dep: string) => {
    setDepartment(dep);
  };
  const handleLocation = (loc: string) => {
    setLocation(loc);
  };
  const handleSearch = (term: string) => {
    setSearchTerm(term);
  };

  useEffect(() => {
    let filteredJobs = jobs.filter((job) => {
      if (department && location) {
        return (
          job.department.toLocaleLowerCase() === department &&
          job.location.toLowerCase() === location
        );
      } else if (department) {
        return job.department.toLocaleLowerCase() === department;
      } else if (location) {
        return job.location.toLocaleLowerCase() === location;
      }
      return true;
    });

    if (searchTerm) {
      filteredJobs = filteredJobs.filter(
        (job) =>
          job.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
          job.description.toLowerCase().includes(searchTerm.toLowerCase())
      );
    }

    setFilteredList(filteredJobs);
  }, [department, location, searchTerm, jobs]);

  return (
    <>
      <Head>
        <title>Accessiway jobs</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Header />
        <IntroText />
        <FilterBar
          handleDepartment={handleDepartment}
          handleLocation={handleLocation}
          handleSearch={handleSearch}
        />
        <Grid>
          {filteredList.map((job) => (
            <div key={job.id}>
              <Card
                title={job.title}
                description={job.description}
                location={job.location}
                link={`joblist/${job.id}`}
                icon={""}
              />
            </div>
          ))}
        </Grid>
        <Footer />
      </main>
    </>
  );
};

export default JobList;

export const getStaticProps: GetStaticProps = async () => {
  const jobs = getSortedJobsData();
  return {
    props: { jobs },
  };
};
